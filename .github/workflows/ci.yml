name: CI
on:
  push:
    branches:
      - master
      - develop
      - release/*
      - feature/*
  pull_request:
    branches:
      - master
      - develop

env:
  TYPO3_PATH_ROOT: ${{ github.workspace }}/.Build/web
  typo3DatabaseHost: 127.0.0.1
  typo3DatabaseName: typo3
  typo3DatabaseUsername: root
  typo3DatabasePassword: root

jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        php_version: [ '7.3', '7.4', '8.0' ]
        typo3_version: [ '^10.4', '^11.5' ]
        experimental: [ false ]
        exclude:
          - php_version: '8.0'
            typo3_version: '^10.4'
          - php_version: '7.3'
            typo3_version: '^11.5'
        include:
          # add experimental dev-master for PHP 8.0
          - php_version: '8.0'
            typo3_version: 'dev-master'
            experimental: true

    services:
      mysql:
        image: bitnami/mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: typo3
          MYSQL_AUTHENTICATION_PLUGIN: mysql_native_password
        ports:
          - 3306:3306
        options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 10

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: shivammathur/setup-php@v2
        with:
          php-version: '${{ matrix.php_version }}'
          coverage: xdebug
          tools: composer
          extensions: json, mbstring, pdo_mysql, mysql

      - name: Install project testing dependencies
        run: |
          rm composer.lock
          if [[ "${{ matrix.typo3_version }}" = *"dev"* ]]; then
            composer config minimum-stability dev;
            composer config prefer-stable true;
            composer require typo3/cms-core:"@dev" --no-update;
          fi
          composer require typo3/testing-framework:^6.14

      - name: Executing PHP code sniffer
        run: .Build/bin/phpcs -p --standard=PSR2 Classes/

      - name: Executing PHPStan
        run: .Build/bin/phpstan analyse --level 5 Classes/

      - name: Running unit tests
        if: (matrix.php_version == '8.0' && matrix.typo3_version == '^11.5') == false
        run: |
          if [ -d "Tests/Unit" ]; then
            .Build/bin/phpunit --bootstrap .Build/vendor/typo3/testing-framework/Resources/Core/Build/UnitTestsBootstrap.php Tests/Unit/
          fi

      - name: Running unit tests with coverage report
        if: matrix.php_version == '8.0' && matrix.typo3_version == '^11.5'
        run: |
          if [ -d "Tests/Unit" ]; then
            .Build/bin/phpunit --bootstrap .Build/vendor/typo3/testing-framework/Resources/Core/Build/UnitTestsBootstrap.php Tests/Unit/ --coverage-clover=./coverage/unit/clover.xml --whitelist=./Classes/
          fi

      - name: Running functional tests
        if: (matrix.php_version == '8.0' && matrix.typo3_version == '^11.5') == false
        run: |
          if [ -d "Tests/Functional" ]; then
            find 'Tests/Functional' -wholename '*Test.php' | parallel --gnu 'echo; echo "Running functional test suite {}"; .Build/bin/phpunit --bootstrap .Build/vendor/typo3/testing-framework/Resources/Core/Build/FunctionalTestsBootstrap.php {}'
          fi

      - name: Running functional tests with coverage report
        if: matrix.php_version == '8.0' && matrix.typo3_version == '^11.5'
        run: |
          if [ -d "Tests/Functional" ]; then
            find 'Tests/Functional' -wholename '*Test.php' | parallel --gnu 'echo; echo "Running functional test suite {}"; .Build/bin/phpunit --bootstrap .Build/vendor/typo3/testing-framework/Resources/Core/Build/FunctionalTestsBootstrap.php {} --coverage-clover=./coverage/functional/{}/clover.xml --whitelist=./Classes/'
          fi

      - name: Upload coverage report to codecov
        uses: codecov/codecov-action@v2
        if: matrix.php_version == '8.0' && matrix.typo3_version == '^11.5'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/
          flags: phpunit
